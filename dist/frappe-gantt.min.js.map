{"version":3,"file":"frappe-gantt.min.js","sources":["../src/date_utils.js","../src/svg_utils.js","../src/bar.js","../src/arrow.js","../src/popup.js","../src/names.js","../src/index.js"],"sourcesContent":["const YEAR = 'year';\r\nconst MONTH = 'month';\r\nconst DAY = 'day';\r\nconst HOUR = 'hour';\r\nconst MINUTE = 'minute';\r\nconst SECOND = 'second';\r\nconst MILLISECOND = 'millisecond';\r\n\r\nconst month_names = {\r\n    en: [\r\n        'January',\r\n        'February',\r\n        'March',\r\n        'April',\r\n        'May',\r\n        'June',\r\n        'July',\r\n        'August',\r\n        'September',\r\n        'October',\r\n        'November',\r\n        'December',\r\n    ],\r\n    et: [\r\n        'Jaanuar',\r\n        'Veebruar',\r\n        'Märts',\r\n        'Aprill',\r\n        'Mai',\r\n        'Juuni',\r\n        'Juuli',\r\n        'August',\r\n        'September',\r\n        'Oktoober',\r\n        'November',\r\n        'Detsember',\r\n    ],\r\n    es: [\r\n        'Enero',\r\n        'Febrero',\r\n        'Marzo',\r\n        'Abril',\r\n        'Mayo',\r\n        'Junio',\r\n        'Julio',\r\n        'Agosto',\r\n        'Septiembre',\r\n        'Octubre',\r\n        'Noviembre',\r\n        'Diciembre',\r\n    ],\r\n    it: [\r\n        'Gennaio',\r\n        'Febbraio',\r\n        'Marzo',\r\n        'Aprile',\r\n        'Maggio',\r\n        'Giugno',\r\n        'Luglio',\r\n        'Agosto',\r\n        'Settembre',\r\n        'Ottobre',\r\n        'Novembre',\r\n        'Dicembre',\r\n    ],\r\n    ru: [\r\n        'Январь',\r\n        'Февраль',\r\n        'Март',\r\n        'Апрель',\r\n        'Май',\r\n        'Июнь',\r\n        'Июль',\r\n        'Август',\r\n        'Сентябрь',\r\n        'Октябрь',\r\n        'Ноябрь',\r\n        'Декабрь',\r\n    ],\r\n    ptBr: [\r\n        'Janeiro',\r\n        'Fevereiro',\r\n        'Março',\r\n        'Abril',\r\n        'Maio',\r\n        'Junho',\r\n        'Julho',\r\n        'Agosto',\r\n        'Setembro',\r\n        'Outubro',\r\n        'Novembro',\r\n        'Dezembro',\r\n    ],\r\n    fr: [\r\n        'Janvier',\r\n        'Février',\r\n        'Mars',\r\n        'Avril',\r\n        'Mai',\r\n        'Juin',\r\n        'Juillet',\r\n        'Août',\r\n        'Septembre',\r\n        'Octobre',\r\n        'Novembre',\r\n        'Décembre',\r\n    ],\r\n    tr: [\r\n        'Ocak',\r\n        'Şubat',\r\n        'Mart',\r\n        'Nisan',\r\n        'Mayıs',\r\n        'Haziran',\r\n        'Temmuz',\r\n        'Ağustos',\r\n        'Eylül',\r\n        'Ekim',\r\n        'Kasım',\r\n        'Aralık',\r\n    ],\r\n    zh: [\r\n        '一月',\r\n        '二月',\r\n        '三月',\r\n        '四月',\r\n        '五月',\r\n        '六月',\r\n        '七月',\r\n        '八月',\r\n        '九月',\r\n        '十月',\r\n        '十一月',\r\n        '十二月',\r\n    ],\r\n    de: [\r\n        'Januar',\r\n        'Februar',\r\n        'März',\r\n        'April',\r\n        'Mai',\r\n        'Juni',\r\n        'Juli',\r\n        'August',\r\n        'September',\r\n        'Oktober',\r\n        'November',\r\n        'Dezember',\r\n    ],\r\n    hu: [\r\n        'Január',\r\n        'Február',\r\n        'Március',\r\n        'Április',\r\n        'Május',\r\n        'Június',\r\n        'Július',\r\n        'Augusztus',\r\n        'Szeptember',\r\n        'Október',\r\n        'November',\r\n        'December',\r\n    ],\r\n};\r\n\r\nexport default {\r\n    parse(date, date_separator = '-', time_separator = /[.:]/) {\r\n        if (date instanceof Date) {\r\n            return date;\r\n        }\r\n        if (typeof date === 'string') {\r\n            let date_parts, time_parts;\r\n            const parts = date.split(' ');\r\n\r\n            date_parts = parts[0]\r\n                .split(date_separator)\r\n                .map((val) => parseInt(val, 10));\r\n            time_parts = parts[1] && parts[1].split(time_separator);\r\n\r\n            // month is 0 indexed\r\n            date_parts[1] = date_parts[1] - 1;\r\n\r\n            let vals = date_parts;\r\n\r\n            if (time_parts && time_parts.length) {\r\n                if (time_parts.length == 4) {\r\n                    time_parts[3] = '0.' + time_parts[3];\r\n                    time_parts[3] = parseFloat(time_parts[3]) * 1000;\r\n                }\r\n                vals = vals.concat(time_parts);\r\n            }\r\n\r\n            return new Date(...vals);\r\n        }\r\n    },\r\n\r\n    to_string(date, with_time = false) {\r\n        if (!(date instanceof Date)) {\r\n            throw new TypeError('Invalid argument type');\r\n        }\r\n        const vals = this.get_date_values(date).map((val, i) => {\r\n            if (i === 1) {\r\n                // add 1 for month\r\n                val = val + 1;\r\n            }\r\n\r\n            if (i === 6) {\r\n                return padStart(val + '', 3, '0');\r\n            }\r\n\r\n            return padStart(val + '', 2, '0');\r\n        });\r\n        const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\r\n        const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\r\n\r\n        return date_string + (with_time ? ' ' + time_string : '');\r\n    },\r\n\r\n    format(date, format_string = 'YYYY-MM-DD HH:mm:ss.SSS', lang = 'en') {\r\n        const values = this.get_date_values(date).map((d) => padStart(d, 2, 0));\r\n        const format_map = {\r\n            YYYY: values[0],\r\n            MM: padStart(+values[1] + 1, 2, 0),\r\n            DD: values[2],\r\n            HH: values[3],\r\n            mm: values[4],\r\n            ss: values[5],\r\n            SSS: values[6],\r\n            D: values[2],\r\n            MMMM: month_names[lang][+values[1]],\r\n            MMM: month_names[lang][+values[1]],\r\n        };\r\n\r\n        let str = format_string;\r\n        const formatted_values = [];\r\n\r\n        Object.keys(format_map)\r\n            .sort((a, b) => b.length - a.length) // big string first\r\n            .forEach((key) => {\r\n                if (str.includes(key)) {\r\n                    str = str.replace(key, `$${formatted_values.length}`);\r\n                    formatted_values.push(format_map[key]);\r\n                }\r\n            });\r\n\r\n        formatted_values.forEach((value, i) => {\r\n            str = str.replace(`$${i}`, value);\r\n        });\r\n\r\n        return str;\r\n    },\r\n\r\n    diff(date_a, date_b, scale = DAY) {\r\n        let milliseconds, seconds, hours, minutes, days, months, years;\r\n\r\n        milliseconds = date_a - date_b;\r\n        seconds = milliseconds / 1000;\r\n        minutes = seconds / 60;\r\n        hours = minutes / 60;\r\n        days = hours / 24;\r\n        months = days / 30;\r\n        years = months / 12;\r\n\r\n        if (!scale.endsWith('s')) {\r\n            scale += 's';\r\n        }\r\n\r\n        return Math.floor(\r\n            {\r\n                milliseconds,\r\n                seconds,\r\n                minutes,\r\n                hours,\r\n                days,\r\n                months,\r\n                years,\r\n            }[scale]\r\n        );\r\n    },\r\n\r\n    today() {\r\n        const vals = this.get_date_values(new Date()).slice(0, 3);\r\n        return new Date(...vals);\r\n    },\r\n\r\n    now() {\r\n        return new Date();\r\n    },\r\n\r\n    add(date, qty, scale) {\r\n        qty = parseInt(qty, 10);\r\n        const vals = [\r\n            date.getFullYear() + (scale === YEAR ? qty : 0),\r\n            date.getMonth() + (scale === MONTH ? qty : 0),\r\n            date.getDate() + (scale === DAY ? qty : 0),\r\n            date.getHours() + (scale === HOUR ? qty : 0),\r\n            date.getMinutes() + (scale === MINUTE ? qty : 0),\r\n            date.getSeconds() + (scale === SECOND ? qty : 0),\r\n            date.getMilliseconds() + (scale === MILLISECOND ? qty : 0),\r\n        ];\r\n        return new Date(...vals);\r\n    },\r\n\r\n    start_of(date, scale) {\r\n        const scores = {\r\n            [YEAR]: 6,\r\n            [MONTH]: 5,\r\n            [DAY]: 4,\r\n            [HOUR]: 3,\r\n            [MINUTE]: 2,\r\n            [SECOND]: 1,\r\n            [MILLISECOND]: 0,\r\n        };\r\n\r\n        function should_reset(_scale) {\r\n            const max_score = scores[scale];\r\n            return scores[_scale] <= max_score;\r\n        }\r\n\r\n        const vals = [\r\n            date.getFullYear(),\r\n            should_reset(YEAR) ? 0 : date.getMonth(),\r\n            should_reset(MONTH) ? 1 : date.getDate(),\r\n            should_reset(DAY) ? 0 : date.getHours(),\r\n            should_reset(HOUR) ? 0 : date.getMinutes(),\r\n            should_reset(MINUTE) ? 0 : date.getSeconds(),\r\n            should_reset(SECOND) ? 0 : date.getMilliseconds(),\r\n        ];\r\n\r\n        return new Date(...vals);\r\n    },\r\n\r\n    clone(date) {\r\n        return new Date(...this.get_date_values(date));\r\n    },\r\n\r\n    get_date_values(date) {\r\n        return [\r\n            date.getFullYear(),\r\n            date.getMonth(),\r\n            date.getDate(),\r\n            date.getHours(),\r\n            date.getMinutes(),\r\n            date.getSeconds(),\r\n            date.getMilliseconds(),\r\n        ];\r\n    },\r\n\r\n    get_days_in_month(date) {\r\n        const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\n        const month = date.getMonth();\r\n\r\n        if (month !== 1) {\r\n            return no_of_days[month];\r\n        }\r\n\r\n        // Feb\r\n        const year = date.getFullYear();\r\n        if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) {\r\n            return 29;\r\n        }\r\n        return 28;\r\n    },\r\n};\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\r\nfunction padStart(str, targetLength, padString) {\r\n    str = str + '';\r\n    targetLength = targetLength >> 0;\r\n    padString = String(typeof padString !== 'undefined' ? padString : ' ');\r\n    if (str.length > targetLength) {\r\n        return String(str);\r\n    } else {\r\n        targetLength = targetLength - str.length;\r\n        if (targetLength > padString.length) {\r\n            padString += padString.repeat(targetLength / padString.length);\r\n        }\r\n        return padString.slice(0, targetLength) + String(str);\r\n    }\r\n}\r\n","export function $(expr, con) {\r\n    return typeof expr === 'string'\r\n        ? (con || document).querySelector(expr)\r\n        : expr || null;\r\n}\r\n\r\nexport function createSVG(tag, attrs) {\r\n    const elem = document.createElementNS('http://www.w3.org/2000/svg', tag);\r\n    for (let attr in attrs) {\r\n        if (attr === 'append_to') {\r\n            const parent = attrs.append_to;\r\n            parent.appendChild(elem);\r\n        } else if (attr === 'innerHTML') {\r\n            elem.innerHTML = attrs.innerHTML;\r\n        } else {\r\n            elem.setAttribute(attr, attrs[attr]);\r\n        }\r\n    }\r\n    return elem;\r\n}\r\n\r\nexport function createCanvas(tag, attrs) {\r\n    const elem = document.createElement('canvas', tag);\r\n    for (let attr in attrs) {\r\n        if (attr === 'append_to') {\r\n            const parent = attrs.append_to;\r\n            parent.appendChild(elem);\r\n        } else if (attr === 'innerHTML') {\r\n            elem.innerHTML = attrs.innerHTML;\r\n        } else {\r\n            elem.setAttribute(attr, attrs[attr]);\r\n        }\r\n    }\r\n    return elem;\r\n}\r\n\r\nexport function animateSVG(svgElement, attr, from, to) {\r\n    const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\r\n\r\n    if (animatedSvgElement === svgElement) {\r\n        // triggered 2nd time programmatically\r\n        // trigger artificial click event\r\n        const event = document.createEvent('HTMLEvents');\r\n        event.initEvent('click', true, true);\r\n        event.eventName = 'click';\r\n        animatedSvgElement.dispatchEvent(event);\r\n    }\r\n}\r\n\r\nfunction getAnimationElement(\r\n    svgElement,\r\n    attr,\r\n    from,\r\n    to,\r\n    dur = '0.4s',\r\n    begin = '0.1s'\r\n) {\r\n    const animEl = svgElement.querySelector('animate');\r\n    if (animEl) {\r\n        $.attr(animEl, {\r\n            attributeName: attr,\r\n            from,\r\n            to,\r\n            dur,\r\n            begin: 'click + ' + begin, // artificial click\r\n        });\r\n        return svgElement;\r\n    }\r\n\r\n    const animateElement = createSVG('animate', {\r\n        attributeName: attr,\r\n        from,\r\n        to,\r\n        dur,\r\n        begin,\r\n        calcMode: 'spline',\r\n        values: from + ';' + to,\r\n        keyTimes: '0; 1',\r\n        keySplines: cubic_bezier('ease-out'),\r\n    });\r\n    svgElement.appendChild(animateElement);\r\n\r\n    return svgElement;\r\n}\r\n\r\nfunction cubic_bezier(name) {\r\n    return {\r\n        ease: '.25 .1 .25 1',\r\n        linear: '0 0 1 1',\r\n        'ease-in': '.42 0 1 1',\r\n        'ease-out': '0 0 .58 1',\r\n        'ease-in-out': '.42 0 .58 1',\r\n    }[name];\r\n}\r\n\r\n$.on = (element, event, selector, callback) => {\r\n    if (!callback) {\r\n        callback = selector;\r\n        $.bind(element, event, callback);\r\n    } else {\r\n        $.delegate(element, event, selector, callback);\r\n    }\r\n};\r\n\r\n$.off = (element, event, handler) => {\r\n    element.removeEventListener(event, handler);\r\n};\r\n\r\n$.bind = (element, event, callback) => {\r\n    event.split(/\\s+/).forEach(function (event) {\r\n        element.addEventListener(event, callback);\r\n    });\r\n};\r\n\r\n$.delegate = (element, event, selector, callback) => {\r\n    element.addEventListener(event, function (e) {\r\n        const delegatedTarget = e.target.closest(selector);\r\n        if (delegatedTarget) {\r\n            e.delegatedTarget = delegatedTarget;\r\n            callback.call(this, e, delegatedTarget);\r\n        }\r\n    });\r\n};\r\n\r\n$.closest = (selector, element) => {\r\n    if (!element) return null;\r\n\r\n    if (element.matches(selector)) {\r\n        return element;\r\n    }\r\n\r\n    return $.closest(selector, element.parentNode);\r\n};\r\n\r\n$.attr = (element, attr, value) => {\r\n    if (!value && typeof attr === 'string') {\r\n        return element.getAttribute(attr);\r\n    }\r\n\r\n    if (typeof attr === 'object') {\r\n        for (let key in attr) {\r\n            $.attr(element, key, attr[key]);\r\n        }\r\n        return;\r\n    }\r\n\r\n    element.setAttribute(attr, value);\r\n};\r\n","import date_utils from './date_utils';\r\nimport { $, createSVG, animateSVG } from './svg_utils';\r\n\r\nexport default class Bar {\r\n    constructor(gantt, task) {\r\n        this.set_defaults(gantt, task);\r\n        this.prepare();\r\n        this.draw();\r\n        this.bind();\r\n    }\r\n\r\n    set_defaults(gantt, task) {\r\n        this.action_completed = false;\r\n        this.gantt = gantt;\r\n        this.task = task;\r\n    }\r\n\r\n    prepare() {\r\n        this.prepare_values();\r\n        this.prepare_helpers();\r\n    }\r\n\r\n    prepare_values() {\r\n        this.invalid = this.task.invalid;\r\n        this.height = this.gantt.options.bar_height;\r\n        this.x = this.compute_x();\r\n        this.y = this.compute_y();\r\n        this.corner_radius = this.gantt.options.bar_corner_radius;\r\n        this.duration =\r\n            date_utils.diff(this.task._end, this.task._start, 'hour') /\r\n            this.gantt.options.step;\r\n        this.width = this.gantt.options.column_width * this.duration;\r\n        this.progress_width =\r\n            this.gantt.options.column_width *\r\n                this.duration *\r\n                (this.task.progress / 100) || 0;\r\n        this.group = createSVG('g', {\r\n            class: 'bar-wrapper ' + (this.task.custom_class || ''),\r\n            'data-id': this.task.id,\r\n        });\r\n        this.bar_group = createSVG('g', {\r\n            class: 'bar-group',\r\n            append_to: this.group,\r\n        });\r\n        this.handle_group = createSVG('g', {\r\n            class: 'handle-group',\r\n            append_to: this.group,\r\n        });\r\n    }\r\n\r\n    prepare_helpers() {\r\n        SVGElement.prototype.getX = function () {\r\n            return +this.getAttribute('x');\r\n        };\r\n        SVGElement.prototype.getY = function () {\r\n            return +this.getAttribute('y');\r\n        };\r\n        SVGElement.prototype.getWidth = function () {\r\n            return +this.getAttribute('width');\r\n        };\r\n        SVGElement.prototype.getHeight = function () {\r\n            return +this.getAttribute('height');\r\n        };\r\n        SVGElement.prototype.getEndX = function () {\r\n            return this.getX() + this.getWidth();\r\n        };\r\n    }\r\n\r\n    draw() {\r\n        this.draw_bar();\r\n        this.draw_progress_bar();\r\n        // this.draw_label();\r\n        this.draw_resize_handles();\r\n    }\r\n\r\n    draw_bar() {\r\n        this.$bar = createSVG('rect', {\r\n            x: this.x,\r\n            y: this.y,\r\n            width: this.width,\r\n            height: this.height,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'bar',\r\n            append_to: this.bar_group,\r\n        });\r\n\r\n        animateSVG(this.$bar, 'width', 0, this.width);\r\n\r\n        if (this.invalid) {\r\n            this.$bar.classList.add('bar-invalid');\r\n        }\r\n    }\r\n\r\n    draw_progress_bar() {\r\n        if (this.invalid) return;\r\n        this.$bar_progress = createSVG('rect', {\r\n            x: this.x,\r\n            y: this.y,\r\n            width: this.progress_width,\r\n            height: this.height,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'bar-progress',\r\n            append_to: this.bar_group,\r\n        });\r\n\r\n        animateSVG(this.$bar_progress, 'width', 0, this.progress_width);\r\n    }\r\n\r\n    draw_label() {\r\n        createSVG('text', {\r\n            x: this.x + this.width / 2,\r\n            y: this.y + this.height / 2,\r\n            innerHTML: this.task.name,\r\n            class: 'bar-label',\r\n            append_to: this.bar_group,\r\n        });\r\n        // labels get BBox in the next tick\r\n        requestAnimationFrame(() => this.update_label_position());\r\n    }\r\n\r\n    draw_resize_handles() {\r\n        if (this.invalid) return;\r\n\r\n        const bar = this.$bar;\r\n        const handle_width = 8;\r\n\r\n        createSVG('rect', {\r\n            x: bar.getX() + bar.getWidth() - 9,\r\n            y: bar.getY() + 1,\r\n            width: handle_width,\r\n            height: this.height - 2,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'handle right',\r\n            append_to: this.handle_group,\r\n        });\r\n\r\n        createSVG('rect', {\r\n            x: bar.getX() + 1,\r\n            y: bar.getY() + 1,\r\n            width: handle_width,\r\n            height: this.height - 2,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'handle left',\r\n            append_to: this.handle_group,\r\n        });\r\n\r\n        if (this.task.progress && this.task.progress < 100) {\r\n            this.$handle_progress = createSVG('polygon', {\r\n                points: this.get_progress_polygon_points().join(','),\r\n                class: 'handle progress',\r\n                append_to: this.handle_group,\r\n            });\r\n        }\r\n    }\r\n\r\n    get_progress_polygon_points() {\r\n        const bar_progress = this.$bar_progress;\r\n        return [\r\n            bar_progress.getEndX() - 5,\r\n            bar_progress.getY() + bar_progress.getHeight(),\r\n            bar_progress.getEndX() + 5,\r\n            bar_progress.getY() + bar_progress.getHeight(),\r\n            bar_progress.getEndX(),\r\n            bar_progress.getY() + bar_progress.getHeight() - 8.66,\r\n        ];\r\n    }\r\n\r\n    bind() {\r\n        if (this.invalid) return;\r\n        this.setup_click_event();\r\n    }\r\n\r\n    setup_click_event() {\r\n        $.on(this.group, 'focus ' + this.gantt.options.popup_trigger, (e) => {\r\n            if (this.action_completed) {\r\n                // just finished a move action, wait for a few seconds\r\n                return;\r\n            }\r\n\r\n            this.show_popup();\r\n            this.gantt.unselect_all();\r\n            this.group.classList.add('active');\r\n        });\r\n\r\n        $.on(this.group, 'click', (e) => {\r\n            if (this.action_completed) {\r\n                // just finished a move action, wait for a few seconds\r\n                return;\r\n            }\r\n\r\n            this.gantt.trigger_event('click', [this.task]);\r\n        });\r\n    }\r\n\r\n    show_popup() {\r\n        if (this.gantt.bar_being_dragged) return;\r\n\r\n        const start_date = date_utils.format(\r\n            this.task._start,\r\n            'MMM D',\r\n            this.gantt.options.language\r\n        );\r\n        const end_date = date_utils.format(\r\n            date_utils.add(this.task._end, -1, 'second'),\r\n            'MMM D',\r\n            this.gantt.options.language\r\n        );\r\n        const subtitle = start_date + ' - ' + end_date;\r\n\r\n        this.gantt.show_popup({\r\n            target_element: this.$bar,\r\n            title: this.task.name,\r\n            subtitle: subtitle,\r\n            task: this.task,\r\n        });\r\n    }\r\n\r\n    update_bar_position({ x = null, width = null }) {\r\n        const bar = this.$bar;\r\n        if (x) {\r\n            // get all x values of parent task\r\n            const xs = this.task.dependencies.map((dep) => {\r\n                return this.gantt.get_bar(dep).$bar.getX();\r\n            });\r\n            // child task must not go before parent\r\n            const valid_x = xs.reduce((prev, curr) => {\r\n                return x >= curr;\r\n            }, x);\r\n            if (!valid_x) {\r\n                width = null;\r\n                return;\r\n            }\r\n            this.update_attr(bar, 'x', x);\r\n        }\r\n        if (width && width >= this.gantt.options.column_width) {\r\n            this.update_attr(bar, 'width', width);\r\n        }\r\n        // this.update_label_position();\r\n        this.update_handle_position();\r\n        this.update_progressbar_position();\r\n        this.update_arrow_position();\r\n    }\r\n\r\n    date_changed() {\r\n        let changed = false;\r\n        const { new_start_date, new_end_date } = this.compute_start_end_date();\r\n\r\n        if (Number(this.task._start) !== Number(new_start_date)) {\r\n            changed = true;\r\n            this.task._start = new_start_date;\r\n        }\r\n\r\n        if (Number(this.task._end) !== Number(new_end_date)) {\r\n            changed = true;\r\n            this.task._end = new_end_date;\r\n        }\r\n\r\n        if (!changed) return;\r\n\r\n        this.gantt.trigger_event('date_change', [\r\n            this.task,\r\n            new_start_date,\r\n            date_utils.add(new_end_date, -1, 'second'),\r\n        ]);\r\n    }\r\n\r\n    progress_changed() {\r\n        const new_progress = this.compute_progress();\r\n        this.task.progress = new_progress;\r\n        this.gantt.trigger_event('progress_change', [this.task, new_progress]);\r\n    }\r\n\r\n    set_action_completed() {\r\n        this.action_completed = true;\r\n        setTimeout(() => (this.action_completed = false), 1000);\r\n    }\r\n\r\n    compute_start_end_date() {\r\n        const bar = this.$bar;\r\n        const x_in_units = bar.getX() / this.gantt.options.column_width;\r\n        const new_start_date = date_utils.add(\r\n            this.gantt.gantt_start,\r\n            x_in_units * this.gantt.options.step,\r\n            'hour'\r\n        );\r\n        const width_in_units = bar.getWidth() / this.gantt.options.column_width;\r\n        const new_end_date = date_utils.add(\r\n            new_start_date,\r\n            width_in_units * this.gantt.options.step,\r\n            'hour'\r\n        );\r\n\r\n        return { new_start_date, new_end_date };\r\n    }\r\n\r\n    compute_progress() {\r\n        const progress =\r\n            (this.$bar_progress.getWidth() / this.$bar.getWidth()) * 100;\r\n        return parseInt(progress, 10);\r\n    }\r\n\r\n    compute_x() {\r\n        const { step, column_width } = this.gantt.options;\r\n        const task_start = this.task._start;\r\n        const gantt_start = this.gantt.gantt_start;\r\n\r\n        const diff = date_utils.diff(task_start, gantt_start, 'hour');\r\n        let x = (diff / step) * column_width;\r\n\r\n        if (this.gantt.view_is('Month')) {\r\n            const diff = date_utils.diff(task_start, gantt_start, 'day');\r\n            x = (diff * column_width) / 30;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    compute_y() {\r\n        return (\r\n            // this.gantt.options.header_height +\r\n            this.gantt.options.padding / 2 +\r\n            this.task._index * (this.height + this.gantt.options.padding)\r\n        );\r\n    }\r\n\r\n    get_snap_position(dx) {\r\n        let odx = dx,\r\n            rem,\r\n            position;\r\n\r\n        if (this.gantt.view_is('Week')) {\r\n            rem = dx % (this.gantt.options.column_width / 7);\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.gantt.options.column_width / 14\r\n                    ? 0\r\n                    : this.gantt.options.column_width / 7);\r\n        } else if (this.gantt.view_is('Month')) {\r\n            rem = dx % (this.gantt.options.column_width / 30);\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.gantt.options.column_width / 60\r\n                    ? 0\r\n                    : this.gantt.options.column_width / 30);\r\n        } else {\r\n            rem = dx % this.gantt.options.column_width;\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.gantt.options.column_width / 2\r\n                    ? 0\r\n                    : this.gantt.options.column_width);\r\n        }\r\n        return position;\r\n    }\r\n\r\n    update_attr(element, attr, value) {\r\n        value = +value;\r\n        if (!isNaN(value)) {\r\n            element.setAttribute(attr, value);\r\n        }\r\n        return element;\r\n    }\r\n\r\n    update_progressbar_position() {\r\n        if (this.invalid) return;\r\n        this.$bar_progress.setAttribute('x', this.$bar.getX());\r\n        this.$bar_progress.setAttribute(\r\n            'width',\r\n            this.$bar.getWidth() * (this.task.progress / 100)\r\n        );\r\n    }\r\n\r\n    update_label_position() {\r\n        const bar = this.$bar,\r\n            label = this.group.querySelector('.bar-label');\r\n\r\n        if (label.getBBox().width > bar.getWidth()) {\r\n            label.classList.add('big');\r\n            label.setAttribute('x', bar.getX() + bar.getWidth() + 5);\r\n        } else {\r\n            label.classList.remove('big');\r\n            label.setAttribute('x', bar.getX() + bar.getWidth() / 2);\r\n        }\r\n    }\r\n\r\n    update_handle_position() {\r\n        if (this.invalid) return;\r\n        const bar = this.$bar;\r\n        this.handle_group\r\n            .querySelector('.handle.left')\r\n            .setAttribute('x', bar.getX() + 1);\r\n        this.handle_group\r\n            .querySelector('.handle.right')\r\n            .setAttribute('x', bar.getEndX() - 9);\r\n        const handle = this.group.querySelector('.handle.progress');\r\n        handle &&\r\n            handle.setAttribute('points', this.get_progress_polygon_points());\r\n    }\r\n\r\n    update_arrow_position() {\r\n        this.arrows = this.arrows || [];\r\n        for (let arrow of this.arrows) {\r\n            arrow.update();\r\n        }\r\n    }\r\n}\r\n\r\nfunction isFunction(functionToCheck) {\r\n    var getType = {};\r\n    return (\r\n        functionToCheck &&\r\n        getType.toString.call(functionToCheck) === '[object Function]'\r\n    );\r\n}\r\n","import { createSVG } from './svg_utils';\r\n\r\nexport default class Arrow {\r\n    constructor(gantt, from_task, to_task) {\r\n        this.gantt = gantt;\r\n        this.from_task = from_task;\r\n        this.to_task = to_task;\r\n\r\n        this.calculate_path();\r\n        this.draw();\r\n    }\r\n\r\n    calculate_path() {\r\n        let start_x =\r\n            this.from_task.$bar.getX() + this.from_task.$bar.getWidth() / 2;\r\n\r\n        const condition = () =>\r\n            this.to_task.$bar.getX() < start_x + this.gantt.options.padding &&\r\n            start_x > this.from_task.$bar.getX() + this.gantt.options.padding;\r\n\r\n        while (condition()) {\r\n            start_x -= 10;\r\n        }\r\n\r\n        const start_y =\r\n            // this.gantt.options.header_height +\r\n            this.gantt.options.bar_height +\r\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\r\n                this.from_task.task._index +\r\n            (this.gantt.options.padding / 2);\r\n\r\n        const end_x = this.to_task.$bar.getX() - this.gantt.options.padding / 2;\r\n        const end_y =\r\n            // this.gantt.options.header_height +\r\n            this.gantt.options.bar_height / 2 +\r\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\r\n                this.to_task.task._index +\r\n            (this.gantt.options.padding / 2);\r\n\r\n        const from_is_below_to =\r\n            this.from_task.task._index > this.to_task.task._index;\r\n        const curve = this.gantt.options.arrow_curve;\r\n        const clockwise = from_is_below_to ? 1 : 0;\r\n        const curve_y = from_is_below_to ? -curve : curve;\r\n        const offset = from_is_below_to\r\n            ? end_y + this.gantt.options.arrow_curve\r\n            : end_y - this.gantt.options.arrow_curve;\r\n\r\n        this.path = `\r\n            M ${start_x} ${start_y}\r\n            V ${offset}\r\n            a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\r\n            L ${end_x} ${end_y}\r\n            m -5 -5\r\n            l 5 5\r\n            l -5 5`;\r\n\r\n        if (\r\n            this.to_task.$bar.getX() <\r\n            this.from_task.$bar.getX() + this.gantt.options.padding\r\n        ) {\r\n            const down_1 = this.gantt.options.padding / 2 - curve;\r\n            const down_2 =\r\n                this.to_task.$bar.getY() +\r\n                this.to_task.$bar.getHeight() / 2 -\r\n                curve_y;\r\n            const left = this.to_task.$bar.getX() - this.gantt.options.padding;\r\n\r\n            this.path = `\r\n                M ${start_x} ${start_y}\r\n                v ${down_1}\r\n                a ${curve} ${curve} 0 0 1 -${curve} ${curve}\r\n                H ${left}\r\n                a ${curve} ${curve} 0 0 ${clockwise} -${curve} ${curve_y}\r\n                V ${down_2}\r\n                a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\r\n                L ${end_x} ${end_y}\r\n                m -5 -5\r\n                l 5 5\r\n                l -5 5`;\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        this.element = createSVG('path', {\r\n            d: this.path,\r\n            'data-from': this.from_task.task.id,\r\n            'data-to': this.to_task.task.id,\r\n        });\r\n    }\r\n\r\n    update() {\r\n        this.calculate_path();\r\n        this.element.setAttribute('d', this.path);\r\n    }\r\n}\r\n","export default class Popup {\r\n    constructor(parent, custom_html) {\r\n        this.parent = parent;\r\n        this.custom_html = custom_html;\r\n        this.make();\r\n    }\r\n\r\n    make() {\r\n        this.parent.innerHTML = `\r\n            <div class=\"title\"></div>\r\n            <div class=\"subtitle\"></div>\r\n            <div class=\"pointer\"></div>\r\n        `;\r\n\r\n        this.hide();\r\n\r\n        this.title = this.parent.querySelector('.title');\r\n        this.subtitle = this.parent.querySelector('.subtitle');\r\n        this.pointer = this.parent.querySelector('.pointer');\r\n    }\r\n\r\n    show(options) {\r\n        if (!options.target_element) {\r\n            throw new Error('target_element is required to show popup');\r\n        }\r\n        if (!options.position) {\r\n            options.position = 'left';\r\n        }\r\n        const target_element = options.target_element;\r\n\r\n        if (this.custom_html) {\r\n            let html = this.custom_html(options.task);\r\n            html += '<div class=\"pointer\"></div>';\r\n            this.parent.innerHTML = html;\r\n            this.pointer = this.parent.querySelector('.pointer');\r\n        } else {\r\n            // set data\r\n            this.title.innerHTML = options.title;\r\n            this.subtitle.innerHTML = options.subtitle;\r\n            this.parent.style.width = this.parent.clientWidth + 'px';\r\n        }\r\n\r\n        // set position\r\n        let position_meta;\r\n        if (target_element instanceof HTMLElement) {\r\n            position_meta = target_element.getBoundingClientRect();\r\n        } else if (target_element instanceof SVGElement) {\r\n            position_meta = options.target_element.getBBox();\r\n        }\r\n        if (options.position === 'left') {\r\n            this.parent.style.left =\r\n                position_meta.x + (position_meta.width + 10) + 'px';\r\n                // this.parent.style.top = position_meta.y + 'px';\r\n            this.parent.style.top = position_meta.y + 60 + 'px';\r\n\r\n            this.pointer.style.transform = 'rotateZ(90deg)';\r\n            this.pointer.style.left = '-7px';\r\n            this.pointer.style.top = '2px';\r\n        }\r\n\r\n        // show\r\n        this.parent.style.opacity = 1;\r\n    }\r\n\r\n    hide() {\r\n        this.parent.style.opacity = 0;\r\n        this.parent.style.left = 0;\r\n    }\r\n}\r\n","import { $ } from './svg_utils';\r\n\r\nexport default class Names {\r\n    constructor(gantt, task) {\r\n        this.task = task;\r\n        this.gantt = gantt;\r\n        this.make();\r\n    }\r\n\r\n    makeHeader() {\r\n        if(this.gantt){\r\n\r\n            const header = document.createElement('div');\r\n            const headerText = document.createElement('span');\r\n            header.classList.add('header');\r\n            header.style.height = this.gantt.options.header_height + 10 + 'px';\r\n            // header.style.borderBottom = '2px solid #ebeff2';\r\n            headerText.innerText = this.gantt.options.custom_names.header;\r\n\r\n            header.appendChild(headerText);\r\n\r\n            return header;\r\n        }\r\n    }\r\n\r\n    make() {\r\n\r\n        if(this.task){\r\n        \r\n      \r\n        const row_height =\r\n            this.gantt.options.bar_height + this.gantt.options.padding;\r\n\r\n        const parentDiv = document.createElement('div');\r\n        const taskDiv = document.createElement('div');\r\n\r\n        const nameField = document.createElement('span');\r\n\r\n\r\n        nameField.innerText = this.task.name;\r\n        \r\n        parentDiv.classList.add('tasks');\r\n\r\n        taskDiv.classList.add('task');\r\n        taskDiv.style.height = row_height + 'px';\r\n        taskDiv.setAttribute('data-value', this.task.id);\r\n        taskDiv.appendChild(nameField);\r\n\r\n        this.gantt.options.custom_names.buttons.forEach(button => {\r\n            const actionButton = document.createElement('button');\r\n            const classes = button.class.split(\" \")\r\n            classes.forEach(className => {\r\n                actionButton.classList.add(className);\r\n            })\r\n            \r\n            actionButton.innerText = button.label;\r\n            $.on(actionButton, 'click', (e) => {\r\n                this.gantt.trigger_event(button.trigger, [this.task]);\r\n            });\r\n\r\n            parentDiv.appendChild(actionButton);\r\n        })\r\n\r\n        parentDiv.append(taskDiv);\r\n \r\n\r\n        return parentDiv;\r\n        }\r\n    }\r\n\r\n}\r\n","import date_utils from './date_utils';\r\nimport { $, createSVG, createCanvas } from './svg_utils';\r\nimport Bar from './bar';\r\nimport Arrow from './arrow';\r\nimport Popup from './popup';\r\nimport Names from './names';\r\n\r\nimport './gantt.scss';\r\n\r\nconst VIEW_MODE = {\r\n    QUARTER_DAY: 'Quarter Day',\r\n    HALF_DAY: 'Half Day',\r\n    DAY: 'Day',\r\n    WEEK: 'Week',\r\n    MONTH: 'Month',\r\n    YEAR: 'Year',\r\n};\r\n\r\nexport default class Gantt {\r\n    constructor(wrapper, tasks, options) {\r\n        this.setup_wrapper(wrapper);\r\n        this.setup_options(options);\r\n        this.setup_tasks(tasks);\r\n        // initialize with default view mode\r\n        this.change_view_mode();\r\n        this.bind_events();\r\n    }\r\n\r\n    setup_wrapper(element) {\r\n        let svg_element, wrapper_element;\r\n\r\n        // CSS Selector is passed\r\n        if (typeof element === 'string') {\r\n            element = document.querySelector(element);\r\n        }\r\n\r\n        // get the SVGElement\r\n        if (element instanceof HTMLElement) {\r\n            wrapper_element = element;\r\n            svg_element = element.querySelector('svg');\r\n        } else if (element instanceof SVGElement) {\r\n            svg_element = element;\r\n        } else {\r\n            throw new TypeError(\r\n                'Frappé Gantt only supports usage of a string CSS selector,' +\r\n                    \" HTML DOM element or SVG DOM element for the 'element' parameter\"\r\n            );\r\n        }\r\n\r\n        // svg element\r\n        if (!svg_element) {\r\n            // create it\r\n            // this.$svg = createSVG('svg', {\r\n            this.$svg = createSVG('svg', {\r\n                append_to: wrapper_element,\r\n                class: 'gantt',\r\n            });\r\n        } else {\r\n            this.$svg = svg_element;\r\n            this.$svg.classList.add('gantt');\r\n        }\r\n\r\n        // names element\r\n        this.$titles = document.createElement('div');\r\n        this.$titles.classList.add('names');\r\n\r\n        // wrapper element\r\n        this.$container = document.createElement('div');\r\n        this.$container.classList.add('gantt-container');\r\n\r\n        this.$svgHeader = document.createElement('div');\r\n        this.$svgHeader.classList.add('ganttchart-header');\r\n        // this.$svgHeader.style.height = '60px';\r\n        \r\n\r\n        this.$headerSvg = createSVG('svg', {\r\n            append_to: this.$svgHeader,\r\n            class: 'gantt',\r\n        });\r\n\r\n        const parent_element = this.$svg.parentElement;\r\n        parent_element.appendChild(this.$titles);\r\n        this.$container.appendChild(this.$svgHeader);\r\n        parent_element.appendChild(this.$container);\r\n        this.$container.appendChild(this.$svg);\r\n\r\n\r\n\r\n        // popup wrapper\r\n        this.popup_wrapper = document.createElement('div');\r\n        this.popup_wrapper.classList.add('popup-wrapper');\r\n        // this.$container.appendChild(this.popup_wrapper);\r\n        this.$svgHeader.appendChild(this.popup_wrapper);\r\n\r\n        let mouseDown = false;\r\n        let startX, scrollLeft;\r\n        let container = this.$container;\r\n\r\n        // console.log(this);\r\n\r\n        // console.log(wrapper_element);\r\n        let startDragging = function (e) {\r\n            // console.log(container);\r\n            mouseDown = true;\r\n            startX = e.pageX - container.offsetLeft;\r\n            scrollLeft = container.scrollLeft;\r\n        };\r\n        let stopDragging = function (event) {\r\n            mouseDown = false;\r\n        };\r\n        $.on(\r\n            container,\r\n            'mousemove',\r\n            '.grid, .grid-background',\r\n            (e, element) => {\r\n                // console.log(container);\r\n                if (!mouseDown) {\r\n                    return;\r\n                }\r\n                const x = e.pageX - container.offsetLeft;\r\n                // console.log(x);\r\n                const scroll = x - startX;\r\n                container.scrollLeft = scrollLeft - scroll;\r\n            }\r\n        );\r\n\r\n        $.on(container, 'mousedown', '.grid, .grid-background', startDragging);\r\n        $.on(container, 'mouseup', '.grid, .grid-background', stopDragging);\r\n        $.on(container, 'mouseleave', '.gantt-container', stopDragging);\r\n\r\n        $.on(this.$titles, 'click', '.tasks, .task', (event, element) => {\r\n            // console.log(event, 'event');\r\n            // console.log(element, 'element');\r\n            this.scroll_to_task(element.getAttribute('data-value'));\r\n            // console.log(element.getAttribute('data-value'));\r\n        });\r\n    }\r\n\r\n    make_grid_names() {\r\n        const rows_layer = createSVG('g', { append_to: this.layers.grid });\r\n        const lines_layer = createSVG('g', { append_to: this.layers.grid });\r\n\r\n        const row_width = this.dates.length * this.options.column_width;\r\n        const row_height = this.options.bar_height + this.options.padding;\r\n\r\n        let row_y = this.options.header_height + this.options.padding / 2;\r\n\r\n        for (let task of this.tasks) {\r\n            createSVG('rect', {\r\n                x: 0,\r\n                y: row_y,\r\n                width: row_width,\r\n                height: row_height,\r\n                class: 'grid-row',\r\n                append_to: rows_layer,\r\n            });\r\n\r\n            createSVG('line', {\r\n                x1: 0,\r\n                y1: row_y + row_height,\r\n                x2: row_width,\r\n                y2: row_y + row_height,\r\n                class: 'row-line',\r\n                append_to: lines_layer,\r\n            });\r\n\r\n            row_y += this.options.bar_height + this.options.padding;\r\n        }\r\n    }\r\n\r\n    setup_options(options) {\r\n        const default_options = {\r\n            header_height: 50,\r\n            column_width: 30,\r\n            step: 24,\r\n            view_modes: [...Object.values(VIEW_MODE)],\r\n            bar_height: 20,\r\n            bar_corner_radius: 3,\r\n            arrow_curve: 5,\r\n            padding: 18,\r\n            view_mode: 'Day',\r\n            date_format: 'YYYY-MM-DD',\r\n            popup_trigger: 'mouseover',\r\n            custom_popup_html: null,\r\n            language: 'et',\r\n            custom_names: {\r\n                header: 'Items',\r\n                buttons: [], // label:string, trigger:string, // class: string\r\n            }\r\n        };\r\n        this.options = Object.assign({}, default_options, options);\r\n    }\r\n\r\n    setup_tasks(tasks) {\r\n        // prepare tasks\r\n        this.tasks = tasks.map((task, i) => {\r\n            // convert to Date objects\r\n            task._start = date_utils.parse(task.start);\r\n            task._end = date_utils.parse(task.end);\r\n\r\n            // make task invalid if duration too large\r\n            if (date_utils.diff(task._end, task._start, 'year') > 10) {\r\n                task.end = null;\r\n            }\r\n\r\n            // cache index\r\n            task._index = i;\r\n\r\n            // invalid dates\r\n            if (!task.start && !task.end) {\r\n                const today = date_utils.today();\r\n                task._start = today;\r\n                task._end = date_utils.add(today, 2, 'day');\r\n            }\r\n\r\n            if (!task.start && task.end) {\r\n                task._start = date_utils.add(task._end, -2, 'day');\r\n            }\r\n\r\n            if (task.start && !task.end) {\r\n                task._end = date_utils.add(task._start, 2, 'day');\r\n            }\r\n\r\n            // if hours is not set, assume the last day is full day\r\n            // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\r\n            const task_end_values = date_utils.get_date_values(task._end);\r\n            if (task_end_values.slice(3).every((d) => d === 0)) {\r\n                task._end = date_utils.add(task._end, 24, 'hour');\r\n            }\r\n\r\n            // invalid flag\r\n            if (!task.start || !task.end) {\r\n                task.invalid = true;\r\n            }\r\n\r\n            // dependencies\r\n            if (typeof task.dependencies === 'string' || !task.dependencies) {\r\n                let deps = [];\r\n                if (task.dependencies) {\r\n                    deps = task.dependencies\r\n                        .split(',')\r\n                        .map((d) => d.trim())\r\n                        .filter((d) => d);\r\n                }\r\n                task.dependencies = deps;\r\n            }\r\n\r\n            // uids\r\n            if (!task.id) {\r\n                task.id = generate_id(task);\r\n            }\r\n\r\n            return task;\r\n        });\r\n\r\n        this.setup_dependencies();\r\n    }\r\n\r\n    setup_dependencies() {\r\n        this.dependency_map = {};\r\n        for (let t of this.tasks) {\r\n            for (let d of t.dependencies) {\r\n                this.dependency_map[d] = this.dependency_map[d] || [];\r\n                this.dependency_map[d].push(t.id);\r\n            }\r\n        }\r\n    }\r\n\r\n    refresh(tasks) {\r\n        this.setup_tasks(tasks);\r\n        this.change_view_mode();\r\n            // this.make_names();\r\n    }\r\n\r\n    change_view_mode(mode = this.options.view_mode) {\r\n        this.update_view_scale(mode);\r\n        this.setup_dates();\r\n        this.render();\r\n        // fire viewmode_change event\r\n        this.trigger_event('view_change', [mode]);\r\n    }\r\n\r\n    update_view_scale(view_mode) {\r\n        this.options.view_mode = view_mode;\r\n\r\n        if (view_mode === VIEW_MODE.DAY) {\r\n            this.options.step = 24;\r\n            this.options.column_width = 38;\r\n        } else if (view_mode === VIEW_MODE.HALF_DAY) {\r\n            this.options.step = 24 / 2;\r\n            this.options.column_width = 38;\r\n        } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\r\n            this.options.step = 24 / 4;\r\n            this.options.column_width = 38;\r\n        } else if (view_mode === VIEW_MODE.WEEK) {\r\n            this.options.step = 24 * 7;\r\n            this.options.column_width = 140;\r\n        } else if (view_mode === VIEW_MODE.MONTH) {\r\n            this.options.step = 24 * 30;\r\n            this.options.column_width = 120;\r\n        } else if (view_mode === VIEW_MODE.YEAR) {\r\n            this.options.step = 24 * 365;\r\n            this.options.column_width = 120;\r\n        }\r\n    }\r\n\r\n    setup_dates() {\r\n        this.setup_gantt_dates();\r\n        this.setup_date_values();\r\n    }\r\n\r\n    setup_gantt_dates() {\r\n        this.gantt_start = this.gantt_end = null;\r\n\r\n        for (let task of this.tasks) {\r\n            // set global start and end date\r\n            if (!this.gantt_start || task._start < this.gantt_start) {\r\n                this.gantt_start = task._start;\r\n            }\r\n            if (!this.gantt_end || task._end > this.gantt_end) {\r\n                this.gantt_end = task._end;\r\n            }\r\n        }\r\n\r\n        this.gantt_start = date_utils.start_of(this.gantt_start, 'day');\r\n        this.gantt_end = date_utils.start_of(this.gantt_end, 'day');\r\n\r\n        // add date padding on both sides\r\n        if (this.view_is([VIEW_MODE.QUARTER_DAY, VIEW_MODE.HALF_DAY])) {\r\n            this.gantt_start = date_utils.add(this.gantt_start, -7, 'day');\r\n            this.gantt_end = date_utils.add(this.gantt_end, 7, 'day');\r\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\r\n            this.gantt_start = date_utils.start_of(this.gantt_start, 'year');\r\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'year');\r\n        } else if (this.view_is(VIEW_MODE.YEAR)) {\r\n            this.gantt_start = date_utils.add(this.gantt_start, -2, 'year');\r\n            this.gantt_end = date_utils.add(this.gantt_end, 2, 'year');\r\n        } else {\r\n            this.gantt_start = date_utils.add(this.gantt_start, -1, 'month');\r\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'month');\r\n        }\r\n    }\r\n\r\n    setup_date_values() {\r\n        this.dates = [];\r\n        let cur_date = null;\r\n\r\n        while (cur_date === null || cur_date < this.gantt_end) {\r\n            if (!cur_date) {\r\n                cur_date = date_utils.clone(this.gantt_start);\r\n            } else {\r\n                if (this.view_is(VIEW_MODE.YEAR)) {\r\n                    cur_date = date_utils.add(cur_date, 1, 'year');\r\n                } else if (this.view_is(VIEW_MODE.MONTH)) {\r\n                    cur_date = date_utils.add(cur_date, 1, 'month');\r\n                } else {\r\n                    cur_date = date_utils.add(\r\n                        cur_date,\r\n                        this.options.step,\r\n                        'hour'\r\n                    );\r\n                }\r\n            }\r\n            this.dates.push(cur_date);\r\n        }\r\n    }\r\n\r\n    bind_events() {\r\n        this.bind_grid_click();\r\n        this.bind_bar_events();\r\n    }\r\n\r\n    render() {\r\n        this.clear();\r\n        this.setup_layers();\r\n        this.make_grid();\r\n        this.make_dates();\r\n        this.make_bars();\r\n        this.make_arrows();\r\n        this.map_arrows_on_bars();\r\n        this.set_width();\r\n        this.set_scroll_position();\r\n        this.make_names();\r\n        // this.display_names(this.options, this.tasks);\r\n    }\r\n\r\n    setup_layers() {\r\n        this.layers = {};\r\n        this.newLayers = {};\r\n        const layers = ['grid', 'date', 'arrow', 'progress', 'bar', 'details'];\r\n        const newLayers = ['grid', 'date'];\r\n        // make group layers\r\n        for (let layer of layers) {\r\n            if(layer !== 'date'){\r\n                this.layers[layer] = createSVG('g', {\r\n                    class: layer,\r\n                    append_to: this.$svg,\r\n                });\r\n            }\r\n        }\r\n\r\n        for (let layer of newLayers){\r\n                            this.newLayers[layer] = createSVG('g', {\r\n                                class: layer,\r\n                                append_to: this.$headerSvg,\r\n                            });\r\n                    \r\n        }\r\n    }\r\n\r\n    make_grid() {\r\n        this.make_grid_background();\r\n        this.make_grid_rows();\r\n        this.make_grid_header();\r\n        this.make_grid_ticks();\r\n        this.make_grid_highlights();\r\n    }\r\n\r\n    make_grid_background() {\r\n        const grid_width = this.dates.length * this.options.column_width;\r\n        const grid_height =\r\n            this.options.header_height +\r\n            this.options.padding +\r\n            (this.options.bar_height + this.options.padding) *\r\n                this.tasks.length;\r\n\r\n        createSVG('rect', {\r\n            x: 0,\r\n            y: 0,\r\n            width: grid_width,\r\n            height: grid_height,\r\n            class: 'grid-background',\r\n            append_to: this.layers.grid,\r\n        });\r\n\r\n        $.attr(this.$svg, {\r\n            height: grid_height + 100,\r\n            // height: '100%',\r\n            width: '100%',\r\n        });\r\n        $.attr(this.$headerSvg, {\r\n            height: this.options.header_height + 10,\r\n            // height: '100%',\r\n            width: '100%',\r\n        });\r\n    }\r\n\r\n    make_grid_rows() {\r\n        const rows_layer = createSVG('g', { append_to: this.layers.grid });\r\n        const lines_layer = createSVG('g', { append_to: this.layers.grid });\r\n\r\n        const row_width = this.dates.length * this.options.column_width;\r\n        const row_height = this.options.bar_height + this.options.padding;\r\n\r\n        // let row_y = this.options.header_height + this.options.padding / 2;\r\n        let row_y = 0;\r\n\r\n        for (let task of this.tasks) {\r\n            createSVG('rect', {\r\n                x: 0,\r\n                y: row_y,\r\n                width: row_width,\r\n                height: row_height,\r\n                class: 'grid-row',\r\n                append_to: rows_layer,\r\n            });\r\n\r\n            createSVG('line', {\r\n                x1: 0,\r\n                y1: row_y + row_height,\r\n                x2: row_width,\r\n                y2: row_y + row_height,\r\n                class: 'row-line',\r\n                append_to: lines_layer,\r\n            });\r\n\r\n            row_y += this.options.bar_height + this.options.padding;\r\n        }\r\n    }\r\n\r\n    make_grid_header() {\r\n        // const header_width = this.dates.length * this.options.column_width;\r\n        // const header_height = this.options.header_height + 10;\r\n        // createSVG('rect', {\r\n        //     x: 0,\r\n        //     y: 0,\r\n        //     width: header_width,\r\n        //     height: header_height,\r\n        //     class: 'grid-header',\r\n        //     append_to: this.layers.grid,\r\n        // });\r\n\r\n        const header_width = this.dates.length * this.options.column_width;\r\n        const header_height = this.options.header_height + 10;\r\n        createSVG('rect', {\r\n            x: 0,\r\n            y: 0,\r\n            width: header_width,\r\n            height: header_height,\r\n            class: 'grid-header',\r\n            append_to: this.newLayers.grid,\r\n        });\r\n    }\r\n\r\n    make_grid_ticks() {\r\n        let tick_x = 0;\r\n        let tick_y = this.options.header_height + this.options.padding / 2;\r\n        let tick_height =\r\n            (this.options.bar_height + this.options.padding) *\r\n            this.tasks.length;\r\n\r\n        for (let date of this.dates) {\r\n            let tick_class = 'tick';\r\n            // thick tick for monday\r\n            if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\r\n                tick_class += ' thick';\r\n            }\r\n            // thick tick for first week\r\n            if (\r\n                this.view_is(VIEW_MODE.WEEK) &&\r\n                date.getDate() >= 1 &&\r\n                date.getDate() < 8\r\n            ) {\r\n                tick_class += ' thick';\r\n            }\r\n            // thick ticks for quarters\r\n            if (this.view_is(VIEW_MODE.MONTH) && date.getMonth() % 3 === 0) {\r\n                tick_class += ' thick';\r\n            }\r\n\r\n            createSVG('path', {\r\n                d: `M ${tick_x} ${tick_y} v ${tick_height}`,\r\n                class: tick_class,\r\n                append_to: this.layers.grid,\r\n            });\r\n\r\n            if (this.view_is(VIEW_MODE.MONTH)) {\r\n                tick_x +=\r\n                    (date_utils.get_days_in_month(date) *\r\n                        this.options.column_width) /\r\n                    30;\r\n            } else {\r\n                tick_x += this.options.column_width;\r\n            }\r\n        }\r\n    }\r\n\r\n    make_grid_highlights() {\r\n        // highlight today's date\r\n        if (this.view_is(VIEW_MODE.DAY)) {\r\n            const x =\r\n                (date_utils.diff(date_utils.today(), this.gantt_start, 'hour') /\r\n                    this.options.step) *\r\n                this.options.column_width;\r\n            const y = 0;\r\n\r\n            const width = this.options.column_width;\r\n            const height =\r\n                (this.options.bar_height + this.options.padding) *\r\n                    this.tasks.length +\r\n                this.options.header_height +\r\n                this.options.padding / 2;\r\n\r\n            createSVG('rect', {\r\n                x,\r\n                y,\r\n                width,\r\n                height,\r\n                class: 'today-highlight',\r\n                append_to: this.layers.grid,\r\n            });\r\n        }\r\n    }\r\n\r\n    make_dates() {\r\n        for (let date of this.get_dates_to_draw()) {\r\n            // createSVG('text', {\r\n            //     x: date.lower_x,\r\n            //     y: date.lower_y,\r\n            //     innerHTML: date.lower_text,\r\n            //     class: 'lower-text',\r\n            //     append_to: this.layers.date,\r\n            // });\r\n\r\n            // if (date.upper_text) {\r\n            //     const $upper_text = createSVG('text', {\r\n            //         x: date.upper_x,\r\n            //         y: date.upper_y,\r\n            //         innerHTML: date.upper_text,\r\n            //         class: 'upper-text',\r\n            //         append_to: this.layers.date,\r\n            //     });\r\n\r\n            //     // remove out-of-bound dates\r\n            //     if (\r\n            //         $upper_text.getBBox().x2 > this.layers.grid.getBBox().width\r\n            //     ) {\r\n            //         $upper_text.remove();\r\n            //     }\r\n            // }\r\n\r\n            //test \r\n            const daatum = document.querySelector('.date');\r\n            createSVG('text', {\r\n                x: date.lower_x,\r\n                y: date.lower_y,\r\n                innerHTML: date.lower_text,\r\n                class: 'lower-text',\r\n                append_to: daatum,\r\n            });\r\n\r\n            if (date.upper_text) {\r\n                const $upper_text = createSVG('text', {\r\n                    x: date.upper_x,\r\n                    y: date.upper_y,\r\n                    innerHTML: date.upper_text,\r\n                    class: 'upper-text',\r\n                    append_to: daatum,\r\n                });\r\n\r\n                // remove out-of-bound dates\r\n                if (\r\n                    $upper_text.getBBox().x2 > this.layers.grid.getBBox().width\r\n                ) {\r\n                    $upper_text.remove();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    get_dates_to_draw() {\r\n        let last_date = null;\r\n        const dates = this.dates.map((date, i) => {\r\n            const d = this.get_date_info(date, last_date, i);\r\n            last_date = date;\r\n            return d;\r\n        });\r\n        return dates;\r\n    }\r\n\r\n    get_date_info(date, last_date, i) {\r\n        if (!last_date) {\r\n            last_date = date_utils.add(date, 1, 'year');\r\n        }\r\n        const date_text = {\r\n            'Quarter Day_lower': date_utils.format(\r\n                date,\r\n                'HH',\r\n                this.options.language\r\n            ),\r\n            'Half Day_lower': date_utils.format(\r\n                date,\r\n                'HH',\r\n                this.options.language\r\n            ),\r\n            Day_lower:\r\n                date.getDate() !== last_date.getDate()\r\n                    ? date_utils.format(date, 'D', this.options.language)\r\n                    : '',\r\n            Week_lower:\r\n                date.getMonth() !== last_date.getMonth()\r\n                    ? date_utils.format(date, 'D MMM', this.options.language)\r\n                    : date_utils.format(date, 'D', this.options.language),\r\n            Month_lower: date_utils.format(date, 'MMMM', this.options.language),\r\n            Year_lower: date_utils.format(date, 'YYYY', this.options.language),\r\n            'Quarter Day_upper':\r\n                date.getDate() !== last_date.getDate()\r\n                    ? date_utils.format(date, 'D MMM', this.options.language)\r\n                    : '',\r\n            'Half Day_upper':\r\n                date.getDate() !== last_date.getDate()\r\n                    ? date.getMonth() !== last_date.getMonth()\r\n                        ? date_utils.format(\r\n                              date,\r\n                              'D MMM',\r\n                              this.options.language\r\n                          )\r\n                        : date_utils.format(date, 'D', this.options.language)\r\n                    : '',\r\n            Day_upper:\r\n                date.getMonth() !== last_date.getMonth()\r\n                    ? date_utils.format(date, 'MMMM', this.options.language)\r\n                    : '',\r\n            Week_upper:\r\n                date.getMonth() !== last_date.getMonth()\r\n                    ? date_utils.format(date, 'MMMM', this.options.language)\r\n                    : '',\r\n            Month_upper:\r\n                date.getFullYear() !== last_date.getFullYear()\r\n                    ? date_utils.format(date, 'YYYY', this.options.language)\r\n                    : '',\r\n            Year_upper:\r\n                date.getFullYear() !== last_date.getFullYear()\r\n                    ? date_utils.format(date, 'YYYY', this.options.language)\r\n                    : '',\r\n        };\r\n\r\n        const base_pos = {\r\n            x: i * this.options.column_width,\r\n            lower_y: this.options.header_height,\r\n            upper_y: this.options.header_height - 25,\r\n        };\r\n\r\n        const x_pos = {\r\n            'Quarter Day_lower': (this.options.column_width * 4) / 2,\r\n            'Quarter Day_upper': 0,\r\n            'Half Day_lower': (this.options.column_width * 2) / 2,\r\n            'Half Day_upper': 0,\r\n            Day_lower: this.options.column_width / 2,\r\n            Day_upper: (this.options.column_width * 30) / 2,\r\n            Week_lower: 0,\r\n            Week_upper: (this.options.column_width * 4) / 2,\r\n            Month_lower: this.options.column_width / 2,\r\n            Month_upper: (this.options.column_width * 12) / 2,\r\n            Year_lower: this.options.column_width / 2,\r\n            Year_upper: (this.options.column_width * 30) / 2,\r\n        };\r\n\r\n        return {\r\n            upper_text: date_text[`${this.options.view_mode}_upper`],\r\n            lower_text: date_text[`${this.options.view_mode}_lower`],\r\n            upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\r\n            upper_y: base_pos.upper_y,\r\n            lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\r\n            lower_y: base_pos.lower_y,\r\n        };\r\n    }\r\n\r\n    make_bars() {\r\n        this.bars = this.tasks.map((task) => {\r\n            const bar = new Bar(this, task);\r\n            this.layers.bar.appendChild(bar.group);\r\n            return bar;\r\n        });\r\n    }\r\n\r\n    make_names() {\r\n        this.$titles.innerHTML = \"\";\r\n        const header = new Names(this);\r\n        this.$titles.appendChild(header.makeHeader());\r\n        this.names = this.tasks.map((task) => {\r\n            const name = new Names(this, task);\r\n            const elem = name.make();\r\n            this.$titles.appendChild(elem);\r\n            return name;\r\n        });\r\n    }\r\n\r\n    make_arrows() {\r\n        this.arrows = [];\r\n        for (let task of this.tasks) {\r\n            let arrows = [];\r\n            arrows = task.dependencies\r\n                .map((task_id) => {\r\n                    const dependency = this.get_task(task_id);\r\n                    if (!dependency) return;\r\n                    const arrow = new Arrow(\r\n                        this,\r\n                        this.bars[dependency._index], // from_task\r\n                        this.bars[task._index] // to_task\r\n                    );\r\n                    this.layers.arrow.appendChild(arrow.element);\r\n                    return arrow;\r\n                })\r\n                .filter(Boolean); // filter falsy values\r\n            this.arrows = this.arrows.concat(arrows);\r\n        }\r\n    }\r\n\r\n    map_arrows_on_bars() {\r\n        for (let bar of this.bars) {\r\n            bar.arrows = this.arrows.filter((arrow) => {\r\n                return (\r\n                    arrow.from_task.task.id === bar.task.id ||\r\n                    arrow.to_task.task.id === bar.task.id\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    set_width() {\r\n        const cur_width = this.$svg.getBoundingClientRect().width;\r\n        const actual_width = this.$svg\r\n            .querySelector('.grid .grid-row')\r\n            .getAttribute('width');\r\n        if (cur_width < actual_width) {\r\n            this.$svg.setAttribute('width', actual_width);\r\n            this.$headerSvg.setAttribute('width', actual_width);\r\n        }\r\n    }\r\n\r\n    set_scroll_position() {\r\n        const parent_element = this.$svg.parentElement;\r\n        if (!parent_element) return;\r\n\r\n        const hours_before_first_task = date_utils.diff(\r\n            this.get_oldest_starting_date(),\r\n            this.gantt_start,\r\n            'hour'\r\n        );\r\n\r\n        const scroll_pos =\r\n            (hours_before_first_task / this.options.step) *\r\n                this.options.column_width -\r\n            this.options.column_width;\r\n\r\n        parent_element.scrollLeft = scroll_pos;\r\n    }\r\n\r\n    scroll_to_task(taskId) {\r\n        // return this.tasks\r\n        // .map((task) => task._start)\r\n        // .reduce((prev_date, cur_date) =>\r\n        //     cur_date <= prev_date ? cur_date : prev_date\r\n        // );\r\n\r\n        const taskToScroll = this.tasks.find((task) => task.id === taskId);\r\n        // console.log(taskToScroll);\r\n        if (taskToScroll) {\r\n            const parent_element = this.$svg.parentElement;\r\n            if (!parent_element) return;\r\n\r\n            const hours_before_first_task = date_utils.diff(\r\n                taskToScroll._start,\r\n                this.gantt_start,\r\n                'hour'\r\n            );\r\n\r\n            const scroll_pos =\r\n                (hours_before_first_task / this.options.step) *\r\n                    this.options.column_width -\r\n                this.options.column_width;\r\n\r\n            parent_element.scrollLeft = scroll_pos;\r\n        }\r\n    }\r\n\r\n    bind_grid_click() {\r\n        $.on(\r\n            this.$svg,\r\n            this.options.popup_trigger,\r\n            '.grid-row, .grid-header',\r\n            () => {\r\n                this.unselect_all();\r\n                this.hide_popup();\r\n            }\r\n        );\r\n    }\r\n\r\n    bind_bar_events() {\r\n        let is_dragging = false;\r\n        let x_on_start = 0;\r\n        let y_on_start = 0;\r\n        let is_resizing_left = false;\r\n        let is_resizing_right = false;\r\n        let parent_bar_id = null;\r\n        let bars = []; // instanceof Bar\r\n        this.bar_being_dragged = null;\r\n\r\n        function action_in_progress() {\r\n            return is_dragging || is_resizing_left || is_resizing_right;\r\n        }\r\n\r\n        $.on(this.$svg, 'mousedown', '.bar-wrapper, .handle', (e, element) => {\r\n            const bar_wrapper = $.closest('.bar-wrapper', element);\r\n\r\n            if (element.classList.contains('left')) {\r\n                is_resizing_left = true;\r\n            } else if (element.classList.contains('right')) {\r\n                is_resizing_right = true;\r\n            } else if (element.classList.contains('bar-wrapper')) {\r\n                is_dragging = true;\r\n            }\r\n\r\n            bar_wrapper.classList.add('active');\r\n\r\n            x_on_start = e.offsetX;\r\n            y_on_start = e.offsetY;\r\n\r\n            parent_bar_id = bar_wrapper.getAttribute('data-id');\r\n            const ids = [\r\n                parent_bar_id,\r\n                ...this.get_all_dependent_tasks(parent_bar_id),\r\n            ];\r\n            bars = ids.map((id) => this.get_bar(id));\r\n\r\n            this.bar_being_dragged = parent_bar_id;\r\n\r\n            bars.forEach((bar) => {\r\n                const $bar = bar.$bar;\r\n                $bar.ox = $bar.getX();\r\n                $bar.oy = $bar.getY();\r\n                $bar.owidth = $bar.getWidth();\r\n                $bar.finaldx = 0;\r\n            });\r\n        });\r\n\r\n        $.on(this.$svg, 'mousemove', (e) => {\r\n            if (!action_in_progress()) return;\r\n            const dx = e.offsetX - x_on_start;\r\n            const dy = e.offsetY - y_on_start;\r\n\r\n            bars.forEach((bar) => {\r\n                const $bar = bar.$bar;\r\n                $bar.finaldx = this.get_snap_position(dx);\r\n                this.hide_popup();\r\n                if (is_resizing_left) {\r\n                    if (parent_bar_id === bar.task.id) {\r\n                        bar.update_bar_position({\r\n                            x: $bar.ox + $bar.finaldx,\r\n                            width: $bar.owidth - $bar.finaldx,\r\n                        });\r\n                    } else {\r\n                        bar.update_bar_position({\r\n                            x: $bar.ox + $bar.finaldx,\r\n                        });\r\n                    }\r\n                } else if (is_resizing_right) {\r\n                    if (parent_bar_id === bar.task.id) {\r\n                        bar.update_bar_position({\r\n                            width: $bar.owidth + $bar.finaldx,\r\n                        });\r\n                    }\r\n                } else if (is_dragging) {\r\n                    bar.update_bar_position({ x: $bar.ox + $bar.finaldx });\r\n                }\r\n            });\r\n        });\r\n\r\n        document.addEventListener('mouseup', (e) => {\r\n            if (is_dragging || is_resizing_left || is_resizing_right) {\r\n                bars.forEach((bar) => bar.group.classList.remove('active'));\r\n            }\r\n\r\n            is_dragging = false;\r\n            is_resizing_left = false;\r\n            is_resizing_right = false;\r\n        });\r\n\r\n        $.on(this.$svg, 'mouseup', (e) => {\r\n            this.bar_being_dragged = null;\r\n            bars.forEach((bar) => {\r\n                const $bar = bar.$bar;\r\n                if (!$bar.finaldx) return;\r\n                bar.date_changed();\r\n                bar.set_action_completed();\r\n            });\r\n        });\r\n\r\n        this.bind_bar_progress();\r\n    }\r\n\r\n    bind_bar_progress() {\r\n        let x_on_start = 0;\r\n        let y_on_start = 0;\r\n        let is_resizing = null;\r\n        let bar = null;\r\n        let $bar_progress = null;\r\n        let $bar = null;\r\n\r\n        $.on(this.$svg, 'mousedown', '.handle.progress', (e, handle) => {\r\n            is_resizing = true;\r\n            x_on_start = e.offsetX;\r\n            y_on_start = e.offsetY;\r\n\r\n            const $bar_wrapper = $.closest('.bar-wrapper', handle);\r\n            const id = $bar_wrapper.getAttribute('data-id');\r\n            bar = this.get_bar(id);\r\n\r\n            $bar_progress = bar.$bar_progress;\r\n            $bar = bar.$bar;\r\n\r\n            $bar_progress.finaldx = 0;\r\n            $bar_progress.owidth = $bar_progress.getWidth();\r\n            $bar_progress.min_dx = -$bar_progress.getWidth();\r\n            $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\r\n        });\r\n\r\n        $.on(this.$svg, 'mousemove', (e) => {\r\n            if (!is_resizing) return;\r\n            let dx = e.offsetX - x_on_start;\r\n            let dy = e.offsetY - y_on_start;\r\n\r\n            if (dx > $bar_progress.max_dx) {\r\n                dx = $bar_progress.max_dx;\r\n            }\r\n            if (dx < $bar_progress.min_dx) {\r\n                dx = $bar_progress.min_dx;\r\n            }\r\n\r\n            const $handle = bar.$handle_progress;\r\n            $.attr($bar_progress, 'width', $bar_progress.owidth + dx);\r\n            $.attr($handle, 'points', bar.get_progress_polygon_points());\r\n            $bar_progress.finaldx = dx;\r\n        });\r\n\r\n        $.on(this.$svg, 'mouseup', () => {\r\n            is_resizing = false;\r\n            if (!($bar_progress && $bar_progress.finaldx)) return;\r\n            bar.progress_changed();\r\n            bar.set_action_completed();\r\n        });\r\n    }\r\n\r\n    get_all_dependent_tasks(task_id) {\r\n        let out = [];\r\n        let to_process = [task_id];\r\n        while (to_process.length) {\r\n            const deps = to_process.reduce((acc, curr) => {\r\n                acc = acc.concat(this.dependency_map[curr]);\r\n                return acc;\r\n            }, []);\r\n\r\n            out = out.concat(deps);\r\n            to_process = deps.filter((d) => !to_process.includes(d));\r\n        }\r\n\r\n        return out.filter(Boolean);\r\n    }\r\n\r\n    get_snap_position(dx) {\r\n        let odx = dx,\r\n            rem,\r\n            position;\r\n\r\n        if (this.view_is(VIEW_MODE.WEEK)) {\r\n            rem = dx % (this.options.column_width / 7);\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.options.column_width / 14\r\n                    ? 0\r\n                    : this.options.column_width / 7);\r\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\r\n            rem = dx % (this.options.column_width / 30);\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.options.column_width / 60\r\n                    ? 0\r\n                    : this.options.column_width / 30);\r\n        } else {\r\n            rem = dx % this.options.column_width;\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.options.column_width / 2\r\n                    ? 0\r\n                    : this.options.column_width);\r\n        }\r\n        return position;\r\n    }\r\n\r\n    unselect_all() {\r\n        [...this.$svg.querySelectorAll('.bar-wrapper')].forEach((el) => {\r\n            el.classList.remove('active');\r\n        });\r\n    }\r\n\r\n    view_is(modes) {\r\n        if (typeof modes === 'string') {\r\n            return this.options.view_mode === modes;\r\n        }\r\n\r\n        if (Array.isArray(modes)) {\r\n            return modes.some((mode) => this.options.view_mode === mode);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    get_task(id) {\r\n        return this.tasks.find((task) => {\r\n            return task.id === id;\r\n        });\r\n    }\r\n\r\n    get_bar(id) {\r\n        return this.bars.find((bar) => {\r\n            return bar.task.id === id;\r\n        });\r\n    }\r\n\r\n    show_popup(options) {\r\n        if (!this.popup) {\r\n            this.popup = new Popup(\r\n                this.popup_wrapper,\r\n                this.options.custom_popup_html\r\n            );\r\n        }\r\n        this.popup.show(options);\r\n    }\r\n\r\n    hide_popup() {\r\n        this.popup && this.popup.hide();\r\n    }\r\n\r\n    trigger_event(event, args) {\r\n        if (this.options['on_' + event]) {\r\n            this.options['on_' + event].apply(null, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets the oldest starting date from the list of tasks\r\n     *\r\n     * @returns Date\r\n     * @memberof Gantt\r\n     */\r\n    get_oldest_starting_date() {\r\n        return new Date();\r\n        return this.tasks\r\n            .map((task) => task._start)\r\n            .reduce((prev_date, cur_date) =>\r\n                cur_date <= prev_date ? cur_date : prev_date\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Clear all elements from the parent svg element\r\n     *\r\n     * @memberof Gantt\r\n     */\r\n    clear() {\r\n        this.$svg.innerHTML = '';\r\n    }\r\n}\r\n\r\nGantt.VIEW_MODE = VIEW_MODE;\r\n\r\nfunction generate_id(task) {\r\n    return task.name + '_' + Math.random().toString(36).slice(2, 12);\r\n}\r\n\r\n"],"names":["YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","month_names","en","et","es","it","ru","ptBr","fr","tr","zh","de","hu","date_utils","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","split","map","val","parseInt","vals","length","parseFloat","concat","to_string","with_time","TypeError","this","get_date_values","i","padStart","date_string","time_string","format","format_string","lang","values","d","format_map","YYYY","MM","DD","HH","mm","ss","SSS","D","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","forEach","key","includes","replace","push","value","diff","date_a","date_b","scale","milliseconds","seconds","hours","minutes","days","months","years","endsWith","Math","floor","today","slice","now","add","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","should_reset","_scale","clone","get_days_in_month","no_of_days","month","year","targetLength","padString","String","repeat","$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","keyTimes","keySplines","cubic_bezier","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","name","ease","linear","on","element","selector","callback","delegate","bind","off","handler","removeEventListener","addEventListener","e","delegatedTarget","target","closest","call","matches","parentNode","getAttribute","Bar","constructor","gantt","task","set_defaults","prepare","draw","action_completed","prepare_values","prepare_helpers","invalid","height","options","bar_height","x","compute_x","y","compute_y","corner_radius","bar_corner_radius","duration","_end","_start","step","width","column_width","progress_width","progress","group","class","custom_class","id","bar_group","handle_group","SVGElement","prototype","getX","getY","getWidth","getHeight","getEndX","draw_bar","draw_progress_bar","draw_resize_handles","$bar","rx","ry","classList","$bar_progress","draw_label","requestAnimationFrame","update_label_position","bar","$handle_progress","points","get_progress_polygon_points","join","bar_progress","setup_click_event","popup_trigger","show_popup","unselect_all","trigger_event","bar_being_dragged","subtitle","language","target_element","title","update_bar_position","dependencies","dep","get_bar","reduce","prev","curr","update_attr","update_handle_position","update_progressbar_position","update_arrow_position","date_changed","changed","new_start_date","new_end_date","compute_start_end_date","Number","progress_changed","new_progress","compute_progress","set_action_completed","setTimeout","x_in_units","gantt_start","width_in_units","task_start","view_is","padding","_index","get_snap_position","dx","rem","position","odx","isNaN","label","getBBox","remove","handle","arrows","arrow","update","Arrow","from_task","to_task","calculate_path","start_x","condition","start_y","end_x","end_y","from_is_below_to","curve","arrow_curve","clockwise","curve_y","offset","path","down_1","down_2","left","Popup","parent","custom_html","make","hide","pointer","show","Error","html","style","clientWidth","position_meta","HTMLElement","getBoundingClientRect","top","transform","opacity","Names","makeHeader","header","createElement","headerText","header_height","innerText","custom_names","row_height","parentDiv","taskDiv","nameField","buttons","button","actionButton","className","trigger","append","VIEW_MODE","QUARTER_DAY","HALF_DAY","WEEK","Gantt","wrapper","tasks","setup_wrapper","setup_options","setup_tasks","change_view_mode","bind_events","svg_element","wrapper_element","$svg","$titles","$container","$svgHeader","$headerSvg","parent_element","parentElement","popup_wrapper","startX","scrollLeft","mouseDown","container","stopDragging","scroll","pageX","offsetLeft","scroll_to_task","make_grid_names","rows_layer","layers","grid","lines_layer","row_width","dates","row_y","x1","y1","x2","y2","default_options","view_modes","view_mode","date_format","custom_popup_html","assign","start","end","every","deps","trim","filter","random","toString","generate_id","setup_dependencies","dependency_map","t","refresh","mode","update_view_scale","setup_dates","render","setup_gantt_dates","setup_date_values","gantt_end","cur_date","bind_grid_click","bind_bar_events","clear","setup_layers","make_grid","make_dates","make_bars","make_arrows","map_arrows_on_bars","set_width","set_scroll_position","make_names","newLayers","layer","make_grid_background","make_grid_rows","make_grid_header","make_grid_ticks","make_grid_highlights","grid_width","grid_height","tick_x","tick_y","tick_height","tick_class","get_dates_to_draw","daatum","lower_x","lower_y","lower_text","upper_text","$upper_text","upper_x","upper_y","last_date","get_date_info","date_text","Day_lower","Week_lower","Month_lower","Year_lower","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","x_pos","bars","names","task_id","dependency","get_task","Boolean","cur_width","actual_width","scroll_pos","get_oldest_starting_date","taskId","taskToScroll","find","hide_popup","is_dragging","x_on_start","y_on_start","is_resizing_left","is_resizing_right","parent_bar_id","bar_wrapper","contains","offsetX","offsetY","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","bind_bar_progress","is_resizing","min_dx","max_dx","$handle","out","to_process","acc","querySelectorAll","el","modes","Array","isArray","some","popup","args","apply"],"mappings":"kCAAA,MAAMA,EAAO,OACPC,EAAQ,QACRC,EAAM,MACNC,EAAO,OACPC,EAAS,SACTC,EAAS,SACTC,EAAc,cAEdC,EAAc,CAChBC,GAAI,CACA,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAEJC,GAAI,CACA,UACA,WACA,QACA,SACA,MACA,QACA,QACA,SACA,YACA,WACA,WACA,aAEJC,GAAI,CACA,QACA,UACA,QACA,QACA,OACA,QACA,QACA,SACA,aACA,UACA,YACA,aAEJC,GAAI,CACA,UACA,WACA,QACA,SACA,SACA,SACA,SACA,SACA,YACA,UACA,WACA,YAEJC,GAAI,CACA,SACA,UACA,OACA,SACA,MACA,OACA,OACA,SACA,WACA,UACA,SACA,WAEJC,KAAM,CACF,UACA,YACA,QACA,QACA,OACA,QACA,QACA,SACA,WACA,UACA,WACA,YAEJC,GAAI,CACA,UACA,UACA,OACA,QACA,MACA,OACA,UACA,OACA,YACA,UACA,WACA,YAEJC,GAAI,CACA,OACA,QACA,OACA,QACA,QACA,UACA,SACA,UACA,QACA,OACA,QACA,UAEJC,GAAI,CACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,OAEJC,GAAI,CACA,SACA,UACA,OACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAEJC,GAAI,CACA,SACA,UACA,UACA,UACA,QACA,SACA,SACA,YACA,aACA,UACA,WACA,aAIO,IAAAC,EAAA,CACXC,MAAMC,EAAMC,EAAiB,IAAKC,EAAiB,QAC/C,GAAIF,aAAgBG,KAChB,OAAOH,EAEX,GAAoB,iBAATA,EAAmB,CAC1B,IAAII,EAAYC,EAChB,MAAMC,EAAQN,EAAKO,MAAM,KAEzBH,EAAaE,EAAM,GACdC,MAAMN,GACNO,KAAKC,GAAQC,SAASD,EAAK,MAChCJ,EAAaC,EAAM,IAAMA,EAAM,GAAGC,MAAML,GAGxCE,EAAW,GAAKA,EAAW,GAAK,EAEhC,IAAIO,EAAOP,EAUX,OARIC,GAAcA,EAAWO,S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"}